stages:
  - pre-build
  - build
  - test
  - deploy
  - post-deploy

connectivity-check:
  stage: pre-build
  image: busybox
  script:
    - ping github.com -c1
    - nc -vz packages.netsec.inf.ethz.ch 22

all-deb-amd64:
  stage: build
  image: $CI_DOCKER_IMAGE
  variables:
    CI_TARGET_ARCHITECTURE: amd64
  script:
    # Prepare operating system
    - echo "Acquire::By-Hash \"yes\"; " > /etc/apt/apt.conf.d/01byhash
    - apt update && apt install -y apt-transport-https
    - cp debian/apt.sources.list /etc/apt/sources.list
    - rm -rf /var/lib/apt/lists/* && apt update && apt install -y git wget curl unzip
    - curl -fSL "https://dl.google.com/go/go$CI_GOLANG_VERSION.linux-amd64.tar.gz" | tar xzC /usr/local
    - ln -f -s /usr/local/go/bin/* /usr/bin/
    # Clone SCION apps source code
    - cd $HOME
    - git clone $CI_SCIONAPPS_REPO -b $CI_SCIONAPPS_BRANCH scion-apps
    - mkdir -p $HOME/go/src/github.com/netsec-ethz/
    - ln -s /root/scion-apps /root/go/src/github.com/netsec-ethz/
    # Override some files from upstream SCION apps
    - pushd scion-apps && for i in ../patches/*.patch; do git apply $i --verbose; done && popd
    # Install mockgen
    - go get -d github.com/golang/mock/mockgen
    - cd $HOME/go/src/github.com/golang/mock/mockgen
    - git checkout 73dc87cad333b55a02058f4b3d872dbbafddc2b0
    - go get .
    - go install .
    # Install SCION apps deps
    - cd $HOME/go/src/github.com/netsec-ethz/scion-apps
    - apt install -y govendor
    - apt install -y capnproto libpam0g-dev
    - govendor sync -v
#    - pushd vendor/zombiezen.com/go/capnproto2/capnpc-go && go install -v && popd
#    - cp vendor/zombiezen.com/go/capnproto2/std/go.capnp vendor/github.com/scionproto/scion/proto/go.capnp
    # Install selected release of BAZEL
    - pushd /tmp
    - wget https://github.com/bazelbuild/bazel/releases/download/$CI_BAZEL_VERSION/bazel-$CI_BAZEL_VERSION-installer-linux-x86_64.sh -O bazel_install_script.sh
    - bash bazel_install_script.sh
    - popd
    # Debug
    - go env
    - cd bwtester/bwtestserver
    - go build
  artifacts:
    paths:
      - output-amd64/
    expire_in: 1 hour
